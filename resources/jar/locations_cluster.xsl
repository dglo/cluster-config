<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="1.0">

<!-- This stylesheet is used for generating the description for the
experiment control scripts. -->

  <!-- Pick up the cluster vars, etc. -->
  <xsl:import href="cluster-vars.xsl" />

  <!-- Python, actually -->
  <xsl:output method="text"/>

  <xsl:template match='/'>
    <xsl:apply-templates select="icecube/cluster[@name=$cluster-name]"/>
  </xsl:template>
  
  <xsl:template match="cluster">
    <!-- Put a warning in for those who like to hack -->
    <xsl:text># This is an automatically generated file.  Do not edit this file.</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:text># Rather, edit the cluster-config.xml file from which this file was generated.</xsl:text>
    <xsl:value-of select="$newline"/>

    <xsl:value-of select="$newline"/>
    <xsl:text># The location of hub elements</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:text>HUB_LOCATIONS = {}</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:apply-templates select="location[starts-with(@name, 'localhost')]" mode="short_name">
      <xsl:with-param name="dict">HUB_LOCATIONS</xsl:with-param>
    </xsl:apply-templates>
    <xsl:apply-templates select="location[starts-with(@name, 'dhs')]" mode="short_name">
      <xsl:with-param name="dict">HUB_LOCATIONS</xsl:with-param>
    </xsl:apply-templates>
    <xsl:apply-templates select="location[starts-with(@name, 'ichub')]" mode="short_name">
      <xsl:with-param name="dict">HUB_LOCATIONS</xsl:with-param>
    </xsl:apply-templates>
    <xsl:apply-templates select="location[starts-with(@name, 'ithub')]" mode="short_name">
      <xsl:with-param name="dict">HUB_LOCATIONS</xsl:with-param>
    </xsl:apply-templates>

    <xsl:value-of select="$newline"/>
    <xsl:text># The location of core components</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:text>CORE_LOCATIONS = {}</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:apply-templates select="location/module" mode="remove_domhubs">
      <xsl:with-param name="dict">CORE_LOCATIONS</xsl:with-param>
    </xsl:apply-templates>

    <!-- fudge it for today! -->
    <xsl:text>CORE_LOCATIONS['DAQControl'] = 'expcont'</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:text>CORE_LOCATIONS['DDControl'] = 'expcont'</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:text>CORE_LOCATIONS['PNFControl'] = 'fpmaster'</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:text>CORE_LOCATIONS['ACMEControl'] = 'expcont'</xsl:text>
    <xsl:value-of select="$newline"/>

    <xsl:value-of select="$newline"/>
    <xsl:text># The location of DOM Hub components</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:text>DOMHUB_LOCATIONS = {}</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:apply-templates select="location/module[starts-with(name, 'domHub')]" mode="locations">
      <xsl:with-param name="dict">DOMHUB_LOCATIONS</xsl:with-param>
    </xsl:apply-templates>

    <xsl:value-of select="$newline"/>
    <xsl:text># The location of String Process components</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:text>STRINGPROC_LOCATIONS = {}</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:apply-templates select="location/module[starts-with(name, 'stringProcessor')]" mode="locations">
      <xsl:with-param name="dict">STRINGPROC_LOCATIONS</xsl:with-param>
    </xsl:apply-templates>
    <xsl:apply-templates select="location/module[starts-with(name, 'iceTopDataHandler')]" mode="locations">
      <xsl:with-param name="dict">STRINGPROC_LOCATIONS</xsl:with-param>
    </xsl:apply-templates>

    <xsl:value-of select="$newline"/>
    <xsl:text># The where locations can be found</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:text>LOCATION_ICEBOSSES = {}</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:apply-templates select="location" mode="icebosses"/>
    

  </xsl:template>
  
  <xsl:template match="location" mode="short_name">
    <xsl:param name="dict"/>
    <xsl:param name="location" select="@name"/>
    <xsl:value-of select="$dict"/>
    <xsl:text>['</xsl:text>
    <xsl:choose>
      <xsl:when test="'localhost'=$location">
        <xsl:value-of select="$location"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:choose>
          <xsl:when test="starts-with($location, 'ithub')">
            <xsl:text>it</xsl:text>        
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>ic</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:value-of select="substring($location, string-length($location) - 1)"/>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:text>'] = '</xsl:text>
    <xsl:value-of select="$location" />
    <xsl:text>'</xsl:text>
    <xsl:value-of select="$newline"/>
  </xsl:template>

  <xsl:template match="module" mode="locations">
    <xsl:param name="dict"/>
    <!-- set a var because I can't figure out the following xpath query without using a var -->
    <xsl:variable name="module-name" select="name"/>
    <xsl:if test="/icecube/module-properties-list/module-properties/name[text()=$module-name]/../daqControl" >
      <xsl:value-of select="$dict"/>
      <xsl:text>['</xsl:text>
      <xsl:value-of select="name" />
      <xsl:choose>
        <xsl:when test="'domHub' = name">
          <xsl:text>_</xsl:text>
          <xsl:value-of select="id" />
        </xsl:when>
        <xsl:when test="'stringProcessor' = name">
          <xsl:text>_</xsl:text>
          <xsl:value-of select="id" />
        </xsl:when>
        <xsl:when test="'iceTopDataHandler' = name">
          <xsl:text>_</xsl:text>
          <xsl:value-of select="id" />
        </xsl:when>
        <xsl:otherwise/>
      </xsl:choose>
      <xsl:text>'] = '</xsl:text>
      <xsl:value-of select="../@name" />
      <xsl:text>'</xsl:text>
      <xsl:value-of select="$newline"/>
    </xsl:if>
  </xsl:template>

  <xsl:template match="module" mode="remove_domhubs">
    <xsl:param name="dict"/>
    <xsl:apply-templates select="self::node()[not(starts-with(name, 'domHub'))]" mode="remove_stringproc">
      <xsl:with-param name="dict" select="$dict"></xsl:with-param>
    </xsl:apply-templates>
  </xsl:template>

  <xsl:template match="module" mode="remove_stringproc">
    <xsl:param name="dict"/>
    <xsl:apply-templates select="self::node()[not(starts-with(name, 'stringProcessor'))]" mode="remove_datahandler">
      <xsl:with-param name="dict" select="$dict"></xsl:with-param>
    </xsl:apply-templates>
  </xsl:template>

 <xsl:template match="module" mode="remove_datahandler">
    <xsl:param name="dict"/>
    <xsl:apply-templates select="self::node()[not(starts-with(name, 'iceTopDataHandler'))]" mode="remove_dispatch">
      <xsl:with-param name="dict" select="$dict"></xsl:with-param>
    </xsl:apply-templates>
  </xsl:template>

 <xsl:template match="module" mode="remove_dispatch">
    <xsl:param name="dict"/>
    <xsl:apply-templates select="self::node()[not(starts-with(name, 'daqDispatch'))]" mode="locations">
      <xsl:with-param name="dict" select="$dict"></xsl:with-param>
    </xsl:apply-templates>
  </xsl:template>

  <xsl:template match="location" mode="icebosses">
    <xsl:text>LOCATION_ICEBOSSES['</xsl:text>
    <xsl:value-of select="@name" />
    <xsl:text>'] = \</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:apply-templates select="address"/>
    <xsl:value-of select="$newline"/>
  </xsl:template>
  
  <xsl:template match="address">
    <xsl:text>        { 'host' : '</xsl:text>
    <xsl:value-of select="host" />
    <xsl:text>' ,</xsl:text>
    <xsl:value-of select="$newline"/>
    <xsl:text>          'iceboss' : '</xsl:text>
    <xsl:value-of select="iceboss" />
    <xsl:text>' }</xsl:text>
  </xsl:template>
</xsl:stylesheet>
